// @ts-nocheck
export default [
  {
    "statements": [
      "CREATE TABLE \"tasks\" (\n  \"id\" TEXT NOT NULL,\n  \"slug\" TEXT NOT NULL,\n  \"markdown\" TEXT,\n  \"summary\" TEXT NOT NULL,\n  \"type\" TEXT NOT NULL,\n  \"impact\" INTEGER,\n  \"sort_order\" INTEGER,\n  \"status\" INTEGER NOT NULL,\n  \"project_id\" TEXT NOT NULL,\n  \"created_at\" TEXT NOT NULL,\n  \"created_by\" TEXT NOT NULL,\n  \"assigned_by\" TEXT,\n  \"assigned_at\" TEXT,\n  \"modified_at\" TEXT,\n  \"modified_by\" TEXT,\n  CONSTRAINT \"tasks_pkey\" PRIMARY KEY (\"id\")\n) WITHOUT ROWID;\n",
      "CREATE TABLE \"labels\" (\n  \"id\" TEXT NOT NULL,\n  \"name\" TEXT NOT NULL,\n  \"color\" TEXT,\n  \"project_id\" TEXT NOT NULL,\n  CONSTRAINT \"labels_pkey\" PRIMARY KEY (\"id\")\n) WITHOUT ROWID;\n",
      "INSERT OR IGNORE INTO _electric_trigger_settings (namespace, tablename, flag) VALUES ('main', 'tasks', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_tasks_primarykey;",
      "CREATE TRIGGER update_ensure_main_tasks_primarykey\n  BEFORE UPDATE ON \"main\".\"tasks\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_tasks_into_oplog;",
      "CREATE TRIGGER insert_main_tasks_into_oplog\n   AFTER INSERT ON \"main\".\"tasks\"\n   WHEN 1 = (SELECT flag from _electric_trigger_settings WHERE namespace = 'main' AND tablename = 'tasks')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'tasks', 'INSERT', json_patch('{}', json_object('id', new.\"id\")), json_object('assigned_at', new.\"assigned_at\", 'assigned_by', new.\"assigned_by\", 'created_at', new.\"created_at\", 'created_by', new.\"created_by\", 'id', new.\"id\", 'impact', new.\"impact\", 'markdown', new.\"markdown\", 'modified_at', new.\"modified_at\", 'modified_by', new.\"modified_by\", 'project_id', new.\"project_id\", 'slug', new.\"slug\", 'sort_order', new.\"sort_order\", 'status', new.\"status\", 'summary', new.\"summary\", 'type', new.\"type\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_tasks_into_oplog;",
      "CREATE TRIGGER update_main_tasks_into_oplog\n   AFTER UPDATE ON \"main\".\"tasks\"\n   WHEN 1 = (SELECT flag from _electric_trigger_settings WHERE namespace = 'main' AND tablename = 'tasks')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'tasks', 'UPDATE', json_patch('{}', json_object('id', new.\"id\")), json_object('assigned_at', new.\"assigned_at\", 'assigned_by', new.\"assigned_by\", 'created_at', new.\"created_at\", 'created_by', new.\"created_by\", 'id', new.\"id\", 'impact', new.\"impact\", 'markdown', new.\"markdown\", 'modified_at', new.\"modified_at\", 'modified_by', new.\"modified_by\", 'project_id', new.\"project_id\", 'slug', new.\"slug\", 'sort_order', new.\"sort_order\", 'status', new.\"status\", 'summary', new.\"summary\", 'type', new.\"type\"), json_object('assigned_at', old.\"assigned_at\", 'assigned_by', old.\"assigned_by\", 'created_at', old.\"created_at\", 'created_by', old.\"created_by\", 'id', old.\"id\", 'impact', old.\"impact\", 'markdown', old.\"markdown\", 'modified_at', old.\"modified_at\", 'modified_by', old.\"modified_by\", 'project_id', old.\"project_id\", 'slug', old.\"slug\", 'sort_order', old.\"sort_order\", 'status', old.\"status\", 'summary', old.\"summary\", 'type', old.\"type\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_tasks_into_oplog;",
      "CREATE TRIGGER delete_main_tasks_into_oplog\n   AFTER DELETE ON \"main\".\"tasks\"\n   WHEN 1 = (SELECT flag from _electric_trigger_settings WHERE namespace = 'main' AND tablename = 'tasks')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'tasks', 'DELETE', json_patch('{}', json_object('id', old.\"id\")), NULL, json_object('assigned_at', old.\"assigned_at\", 'assigned_by', old.\"assigned_by\", 'created_at', old.\"created_at\", 'created_by', old.\"created_by\", 'id', old.\"id\", 'impact', old.\"impact\", 'markdown', old.\"markdown\", 'modified_at', old.\"modified_at\", 'modified_by', old.\"modified_by\", 'project_id', old.\"project_id\", 'slug', old.\"slug\", 'sort_order', old.\"sort_order\", 'status', old.\"status\", 'summary', old.\"summary\", 'type', old.\"type\"), NULL);\nEND;",
      "INSERT OR IGNORE INTO _electric_trigger_settings (namespace, tablename, flag) VALUES ('main', 'labels', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_labels_primarykey;",
      "CREATE TRIGGER update_ensure_main_labels_primarykey\n  BEFORE UPDATE ON \"main\".\"labels\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_labels_into_oplog;",
      "CREATE TRIGGER insert_main_labels_into_oplog\n   AFTER INSERT ON \"main\".\"labels\"\n   WHEN 1 = (SELECT flag from _electric_trigger_settings WHERE namespace = 'main' AND tablename = 'labels')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'labels', 'INSERT', json_patch('{}', json_object('id', new.\"id\")), json_object('color', new.\"color\", 'id', new.\"id\", 'name', new.\"name\", 'project_id', new.\"project_id\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_labels_into_oplog;",
      "CREATE TRIGGER update_main_labels_into_oplog\n   AFTER UPDATE ON \"main\".\"labels\"\n   WHEN 1 = (SELECT flag from _electric_trigger_settings WHERE namespace = 'main' AND tablename = 'labels')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'labels', 'UPDATE', json_patch('{}', json_object('id', new.\"id\")), json_object('color', new.\"color\", 'id', new.\"id\", 'name', new.\"name\", 'project_id', new.\"project_id\"), json_object('color', old.\"color\", 'id', old.\"id\", 'name', old.\"name\", 'project_id', old.\"project_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_labels_into_oplog;",
      "CREATE TRIGGER delete_main_labels_into_oplog\n   AFTER DELETE ON \"main\".\"labels\"\n   WHEN 1 = (SELECT flag from _electric_trigger_settings WHERE namespace = 'main' AND tablename = 'labels')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'labels', 'DELETE', json_patch('{}', json_object('id', old.\"id\")), NULL, json_object('color', old.\"color\", 'id', old.\"id\", 'name', old.\"name\", 'project_id', old.\"project_id\"), NULL);\nEND;"
    ],
    "version": "20240520124857_885"
  }
]